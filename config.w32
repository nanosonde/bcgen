ARG_ENABLE("bcgen", "whether to enable Zend bcgen support", "yes");

ARG_ENABLE("bcgen-file", "whether to enable file based caching", "yes");

/* var PHP_BCGEN_PGO = false; */

if (PHP_BCGEN != "no") {

	if (PHP_BCGEN_FILE == "yes") {
		AC_DEFINE('HAVE_BCGEN_FILE_CACHE', 1, 'Define to enable file based caching (experimental)');
	}

	EXTENSION('bcgen', "\
		ZendAccelerator.c \
		zend_accelerator_debug.c \
		zend_accelerator_module.c \
		zend_accelerator_util_funcs.c \
		zend_persist.c \
		zend_persist_calc.c \
		zend_file_cache.c \
		zend_shared_alloc.c", true, "/DZEND_ENABLE_STATIC_TSRMLS_CACHE=1");

	ADD_SOURCES(configure_module_dirname + "/Optimizer", "zend_optimizer.c pass1_5.c pass2.c pass3.c optimize_func_calls.c block_pass.c optimize_temp_vars_5.c nop_removal.c compact_literals.c zend_cfg.c zend_dfg.c dfa_pass.c zend_ssa.c zend_inference.c zend_func_info.c zend_call_graph.c sccp.c scdf.c dce.c escape_analysis.c compact_vars.c zend_dump.c", "bcgen", "OptimizerObj");

	ADD_FLAG('CFLAGS_BCGEN', "/I " + configure_module_dirname);

}
